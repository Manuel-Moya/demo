---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    product: easyopsspc
    app: easyops
    tier: backend
    component: demo
  name: demo
  namespace: ${K8S_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: easyops
      tier: backend
      component: demo
  template:
    metadata:
      labels:
        app: easyops
        tier: backend
        component: demo
    spec:
      containers:
        - name: demo
          image: ${CONTAINER_REGISTRY}/easyops-demo:${IMAGE_TAG}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "125m"
              memory: "512M"
            limits:
              cpu: "500m"
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 3
      imagePullSecrets:
        - name: prod-acr-secret

---
apiVersion: v1
kind: Service
metadata:
  name: demo
  namespace: ${K8S_NAMESPACE}
spec:
  selector:
    app: easyops
    tier: backend
    component: demo
  ports:
    - port: 8080
      protocol: TCP
      name: http
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: demo-ingress
  namespace: ${K8S_NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  rules:
    - host: ${INGRESS_HOSTNAME}
      http:
        paths:
          - backend:
              serviceName: demo
              servicePort: 8080
            path: /demo(/|$)(.*)
  tls:
    - hosts:
        - ${INGRESS_HOSTNAME}
      secretName: tls-wildcard-maersk-digital-net