# Maven

# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - main


resources:
  repositories:
    - repository: BlackduckTemplateRepo
      type: git
      name: Engineering Enablement/template-blackduck
      ref: master
    - repository: PolarisTemplateRepo
      type: git
      name: Engineering Enablement/templates
      ref: master
    - repository: self


variables:
  tag: '$(Build.BuildNumber)'
  vmImageName: 'ubuntu-latest'
  IMAGE_TAG: '$(Build.BuildId)'
  #CONTAINER_REGISTRY: 'crapmteasyopsspcemeadev.azurecr.io'
  CONTAINER_REGISTRY: 'crapmteasyopsspcemeaprod.azurecr.io'
  INGRESS_HOSTNAME: 'easyops-dev.maersk-digital.net'
  K8S_NAMESPACE: 'easyops-dev'
  cosmosdb_database: ''
  cosmosdb_uri: ''
  cosmosdb_key: ''
  servicebus_connectionstring: ''
  nexusMaerskDevNetConnection: NexusMaerskDevNetRW-APMT-EasyOps
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.test.skip=false'
  mypwd: 'k-t96RK0@0z@gh@eyi4W7$$_D3u!@@0A'


stages:
  - stage: Build
    displayName: Build Project and Deploy
    jobs:
      #      - template: polaris.template.yml@PolarisTemplateRepo
      #        parameters:
      #          polarisScanBranch: development
      #          nexusMaven: true
      #          javaVersion: '11'

      - job: Build
        displayName: Build and Push Container Images
        #dependsOn: Polaris_Scan
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: AzureKeyVault@1
            inputs:
              azureSubscription: 'easyops-spc-emea-dev-cdtteam-stacks'
              KeyVaultName: 'vauapmteasyopsspcemeadev'
              SecretsFilter: '*'

              RunAsPreJob: true
          - task: KubernetesManifest@0
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'SharedAksCoreProdWest-1'
              namespace: 'easyops'
              secretType: 'dockerRegistry'
              secretName: 'prod-acr-secret'
              dockerRegistryEndpoint: 'ProdDockerRegistryServiceConnection'

          - task: JavaToolInstaller@0
            inputs:
              versionSpec: '11'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'

          - task: replacetokens@3
            displayName: Replace Nexus Credentials
            inputs:
              targetFiles: '.mvn/settings.xml'
              tokenPrefix: '${'
              tokenSuffix: '}'

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'easyops-spcemea-prodsactrreg-prod'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                curl -L https://aka.ms/acr/installaad/bash | /bin/bash
                az acr login -n crapmteasyopsspcemeaprod
              addSpnToEnvironment: true

          - task: Bash@3
            displayName: BuildContainer image for Service
            inputs:
              targetType: 'inline'
              script: |
                export IMAGE_TAG=$(IMAGE_TAG)
                export CONTAINER_REGISTRY=$(CONTAINER_REGISTRY)

                echo 'Start Build'

                cd service
                mvn compile jib:build 

                echo 'Build complete'

          - task: replacetokens@3
            displayName: Replace IMAGE_TAG in the manifest file
            inputs:
              targetFiles: 'kubernetes/*.yaml'
              tokenPrefix: '${'
              tokenSuffix: '}'

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              kubernetesServiceConnection: SharedAKSCoreProdWest-1
              namespace: easyops
              action: deploy
              manifests: kubernetes/deploy.yaml







